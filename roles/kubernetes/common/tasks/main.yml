- name: Creating a repository file for Kubernetes on CentOS
  when: target_os_family == 'Redhat'
  file:
   path: /etc/yum.repos.d/kubernetes.repo
   state: touch

- name: Adding repository details in Kubernetes repo file on CentOS
  when: target_os_family == 'Redhat'
  blockinfile:
   path: /etc/yum.repos.d/kubernetes.repo
   block: |
    [kubernetes]
    name=Kubernetes
    baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled=1
    gpgcheck=1
    repo_gpgcheck=1
    gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
      https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: add kubernetes repos on Debian
  when: target_os_family == 'Debian'
  copy:
    src: files/kubernetes.list
    dest: /etc/apt/sources.list.d
    owner: root
    group: root

- name: get kubernetes gpg key on Debian
  when: target_os_family == 'Debain'
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
  become: yes

- name: update apt packages for kubernetes
  when: target_os_family == 'Debian'
  become: true
  apt:
    update_cache: yes

- name: Creating sysctl conf file for k8s
  file:
   path: /etc/sysctl.d/k8s.conf
   state: touch

- name: Update iptables to support bridge traffic
  blockinfile:
   path: /etc/sysctl.d/k8s.conf
   block: |
     net.bridge.bridge-nf-call-ip6tables = 1
     net.bridge.bridge-nf-call-iptables = 1     

- name: apply k8s sysctl
  command: sysctl --system

- name: setenforce
  command: setenforce 0

- name: update enforce configuration in permissive mode
  replace:
   path: /etc/selinux/config
   regexp: '(^SELINUX=enforcing$)'
   replace: 'SELINUX=permissive'

- name: install kubeadm kubectl kubelet on CentOS
  when: target_os_family == 'Redhat'
  yum:
    name: "{{ packages }}"
    state: present

- name: install kubeadm kubectl kubelet on Debain
  when: target_os_family == 'Debian'
  apt:
    name: ['kubeadm', 'kubectl', 'kubelet']
    state: latest 
    update_cache: true

- name: start kubelet
  service: name=kubelet state=started enabled=yes
